#version 460

layout(local_size_x = 4, local_size_y = 4) in;

layout(binding = 0, rgba8) uniform image2D outImage;

//adapted from "Smooth Iterations" by MisterSirCode
//See: https://www.shadertoy.com/view/sdtcz2

void main() {
    //Get info about this invocation
    ivec2 size = imageSize(outImage);
    ivec2 pos = ivec2(gl_GlobalInvocationID.xy);
    vec2 coord = vec2(pos) + vec2(0.5, 0.5);

    //prepare variables
    vec2 uv = ((2.0 * coord - size) / size.y) * 1.5;
    vec2 z = vec2(0.0);
    float l = 0.0;

    //main loop
    for (l = 0.0; l < 100.0; l += 1.0) {
        z = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + uv;
        if (dot(z, z) > 65536.0) break;
    }

    //create coloring
    l = l - log2(log2(dot(z,z))) + 4.0;
    vec4 color = vec4(vec3((l > 99.0) ? 0.0 : sin(l / 20.0)) * vec3(0.1, 1.0, 0.8), 1.0);
    
    //store color
    imageStore(outImage, pos, color);
}
